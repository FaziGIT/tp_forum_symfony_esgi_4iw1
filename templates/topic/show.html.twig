{% extends 'base.html.twig' %}

{% block title %}{{ topic.title }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
{% endblock %}

{% block body %}
    <div class="max-w-3xl mx-auto p-6 bg-white rounded-lg shadow-lg my-6">
        {% for message in app.flashes('success') %}
            <div class="p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:text-green-400"
                 role="alert">
                <span class="font-medium">{{ message }}</span>
            </div>
        {% endfor %}
        <h1 class="text-4xl font-bold text-gray-900 mb-4">{{ topic.title }}</h1>

        <p class="text-gray-600 text-sm mb-4">
            Par <strong>{{ topic.user.username }}</strong>
            le {{ topic.createdAt ? topic.createdAt|date('d M Y') : 'Date inconnue' }}
        </p>

        <div class="mb-6">
            <p class="text-lg text-gray-700">{{ topic.description }}</p>
        </div>

        <div class="mb-6">
            <span class="font-medium text-gray-800">Catégories: </span>
            {% for category in topic.categories %}
                <a href="{{ path('app_category_show', {'id': category.id}) }}"
                   class="inline-block bg-blue-200 text-blue-800 rounded-full px-3 py-1 text-sm mr-2 mb-2">
                    {{ category.name }}
                </a>
            {% else %}
                <span class="text-gray-500">Aucune catégorie assignée</span>
            {% endfor %}
        </div>

        <div class="mb-6">
            <span class="font-medium text-gray-800">Langue: </span>
            <span class="text-gray-600">{{ topic.langue.name }}</span>
        </div>

        <div class="mb-6">
            <h2 class="text-2xl font-semibold text-gray-800">Réponses</h2>

            {{ form_start(form, {'attr': {'id': 'comment-form'}}) }}
            <div class="space-y-4">
                <div class="flex flex-col">
                    {{ form_label(form.content, 'Votre commentaire', {'label_attr': {'class': 'text-sm font-medium text-gray-700'}}) }}
                    <div class="mt-1">
                        {{ form_widget(form.content, {'attr': {'class': 'block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500'}}) }}
                    </div>
                </div>
                <div class="flex justify-end">
                    <button type="submit"
                            class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-500 transition duration-300">
                        Répondre
                    </button>
                </div>
                {{ form_end(form) }}

                <ul class="space-y-4 mt-4" id="comments-list">
                    {% if topic.responses|length > 0 %}
                        {% for response in topic.responses %}
                            <li class="flex justify-between items-center p-4 bg-gray-100 rounded-lg shadow-sm">
                                <div>
                                    <p class="font-medium text-gray-800">{{ response.user.username }}</p>
                                    <p class="text-sm text-gray-600">{{ response.createdAt|date('d M Y H:i') }}</p>
                                    <p class="text-gray-700 mt-2">{{ response.content }}</p>
                                </div>
                            </li>
                        {% endfor %}
                    {% else %}
                        <p id="NoResponseDeleteId" class="text-gray-500">Il n'y a pas encore de réponses à ce topic.</p>
                    {% endif %}
                </ul>

            </div>

            <div class="flex justify-between items-center mt-8">
                <a href="{{ path('app_topic_index') }}"
                   class="px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-400 transition duration-300">
                    Retour à la liste
                </a>
                {% if topic.user == app.user %}
                    <a href="{{ path('app_topic_edit', {'id': topic.id}) }}"
                       class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-500 transition duration-300">
                        Modifier le topic
                    </a>
                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        document.addEventListener("turbo:load", () => {
            const eventSource = new EventSource("{{ mercure('https://example.com/topics/' ~ topic.id) | escape('js') }}");

            eventSource.onmessage = function (event) {
                const data = JSON.parse(event.data);

                if (data.content && data.user && data.createdAt) {
                    if (document.getElementById('NoResponseDeleteId')) {
                        document.getElementById('NoResponseDeleteId').remove();
                    }

                    const commentList = document.getElementById('comments-list');
                    const newComment = document.createElement('li');
                    newComment.classList.add('flex', 'justify-between', 'items-center', 'p-4', 'bg-gray-100', 'rounded-lg', 'shadow-sm');

                    const date = new Date(data.createdAt);
                    const formattedDate = date.toLocaleString('en-GB', {
                        day: '2-digit',
                        month: 'short',
                        year: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit',
                    }).replace(',', '');

                    newComment.innerHTML = `
                <div>
                    <p class="font-medium text-gray-800">${data.user}</p>
                    <p class="text-sm text-gray-600">${formattedDate}</p>
                    <p class="text-gray-700 mt-2">${data.content}</p>
                </div>
            `;
                    commentList.appendChild(newComment);
                }
            };

            eventSource.onerror = function () {
                console.error('Erreur de connexion à Mercure');
            };

            document.getElementById('comment-form').addEventListener('submit', function (event) {
                event.preventDefault();

                const form = event.target;
                const content = form.querySelector('input[name="comment[content]"]').value;

                const data = {
                    content: content
                };

                fetch("{{ path('app_comment_create', {'id': topic.id}) }}", {
                    method: "POST",
                    body: JSON.stringify(data),
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                    .then(response => {
                        if (response.ok) {
                            form.reset();
                            Toastify({
                                text: "Commentaire envoyé avec succès !",
                                duration: 3000,
                                close: true,
                                gravity: "top",
                                position: "right",
                                style: {
                                    background: "#28a745",
                                },
                            }).showToast();
                        } else {
                            throw new Error('Une erreur est survenue.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Toastify({
                            text: "Erreur lors de l'envoi du commentaire.",
                            duration: 3000,
                            close: true,
                            gravity: "top",
                            position: "right",
                            style: {
                                background: "#28a745",
                            },
                        }).showToast();
                    });
            });
        });
    </script>
{% endblock %}
